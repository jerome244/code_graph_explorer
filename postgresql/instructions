If you want the “ORM model classes” / schema

Pick one (or more) of these:

Your real models are in your code: app/models.py + Django migrations in app/migrations/.

Generate models from an existing DB (reverse-engineer):

python manage.py inspectdb > models_from_db.py


See the SQL for a migration:

python manage.py sqlmigrate app_label 0001


Dump only the DB schema (Postgres):

pg_dump -h HOST -U USER -d DB_NAME -s > schema.sql


Explore schema in psql:

\dn          -- list schemas
\dt app_*    -- list tables (filter)
\d table     -- describe a table





# change existing password :
docker compose -f docker-compose.dev.yml exec -T db psql -U postgres -d postgres -c "ALTER USER postgres WITH PASSWORD 'newpass';"

# delete data:
docker compose -f docker-compose.dev.yml down -v && docker compose -f docker-compose.dev.yml up -d


# see where docker is located :
docker volume inspect code_graph_explorer_db-data -f '{{ .Mountpoint }}'





# Keep an eye on disk usage
# What’s taking space:
docker system df -v
docker volume ls

# Safe-ish cleanup (removes unused stuff; read prompts carefully):
docker system prune
docker system prune -a --volumes   # more aggressive; deletes unused images + volumes

# Remove just this project’s volume (⚠️ wipes DB):
docker compose -f docker-compose.dev.yml down -v


